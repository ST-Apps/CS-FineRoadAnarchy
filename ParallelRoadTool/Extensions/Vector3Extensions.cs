using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using UnityEngine;

namespace ParallelRoadTool.Extensions
{
    public static class Vector3Extensions
    {

        /// <summary>
        ///     Given a point, a direction and a distance, we can get the coordinates for a point which is parallel to the given
        ///     one for the given direction.
        /// </summary>
        /// <param name="point"></param>
        /// <param name="direction"></param>
        /// <param name="horizontalDistance"></param>
        /// <param name="verticalDistance"></param>
        /// <param name="isClockwise"></param>
        /// <returns>A <see cref="Vector3" /> with the coordinates generated by offsetting the given point.</returns>
        public static Vector3 Offset(this Vector3 point, Vector3 direction, float horizontalDistance,
            float verticalDistance, bool isClockwise = true)
        {
            var offsetPoint = point + horizontalDistance * new Vector3((isClockwise ? 1 : -1) * direction.z,
                                  direction.y,
                                  (isClockwise ? -1 : 1) * direction.x);
            offsetPoint.y = point.y + verticalDistance;

            return offsetPoint;
        }

    }
}
